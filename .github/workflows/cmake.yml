name: CMake

on:
  push:
    branches: [bbpumpkin]
  pull_request:
    branches: [bbpumpkin]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image: debian:11

    steps:
      - uses: actions/checkout@v2

      - name: apt
        run: "apt update -y && apt upgrade -y && apt install -y ninja-build cmake tar gzip git python3 python3-tqdm flex bison zlib1g-dev clang libclang-dev llvm-dev

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -B ${{github.workspace}}/build

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build

      - name: Test
        # Build your program with the given configuration
        run: CTEST_OUTPUT_ON_FAILURE=1 cmake --build ${{github.workspace}}/build -t test
